hostname_nextcloud: "{{ host_specific_nextcloud_hostname }}"

nextcloud_user_username: nextcloud
nextcloud_user_uid: 3991
nextcloud_user_gid: 3991

# uid/gid that the Nextcloud HTTP server runs with
nextcloud_http_user_uid: 33
nextcloud_http_user_gid: 33

# The Docker network that all services would be put into
nextcloud_docker_network: "nextcloud"

nextcloud_base_data_path: "/nextcloud"
nextcloud_environment_variables_data_path: "{{ nextcloud_base_data_path }}/environment-variables"
nextcloud_external_storage_path: "{{ nextcloud_base_data_path }}/external-storage"
nextcloud_scratchpad_dir: "{{ nextcloud_base_data_path }}/scratchpad"


nextcloud_nextcloud_data_path: "{{ nextcloud_base_data_path }}/nextcloud-data"
nextcloud_nextcloud_docker_image: "nextcloud:20.0.4-apache"

# Controls whether the nextcloud-apache container's memory usage
# is limited and to what extent.
#
# When set, these options are passed to `docker run`
# as `--memory=..` and `--memory-swap=..` respectively.
#
# Expected value format is `[integer][unit]`. E.g. 100M, 1G
#
# If `nextcloud_nextcloud_apache_container_memory_swap_limit` is set,
# it represents the total memory that can be used (memory + swap),
# so it must always be at least as large as `nextcloud_nextcloud_apache_container_memory_limit`.
# To disable swapping, make it the same as `nextcloud_nextcloud_apache_container_memory_limit`.
nextcloud_nextcloud_apache_container_memory_limit: ""
nextcloud_nextcloud_apache_container_memory_swap_limit: ""


nextcloud_postgres_connection_hostname: "nextcloud-postgres"
nextcloud_postgres_connection_username: "nextcloud"
nextcloud_postgres_connection_password: "nextcloud-password"
nextcloud_postgres_db_name: "nextcloud"

nextcloud_postgres_docker_image_v9: "postgres:9.6.20-alpine"
nextcloud_postgres_docker_image_v10: "postgres:10.15-alpine"
nextcloud_postgres_docker_image_v11: "postgres:11.10-alpine"
nextcloud_postgres_docker_image_v12: "postgres:12.5-alpine"
nextcloud_postgres_docker_image_v13: "postgres:13.1-alpine"
nextcloud_postgres_docker_image_latest: "{{ nextcloud_postgres_docker_image_v13 }}"

nextcloud_postgres_data_path: "{{ nextcloud_base_data_path }}/postgres"

# A list of configuration parameters for Nextcloud.
# To define your own, we advise editing `nextcloud_config_additional_parameters`.
nextcloud_config_parameters: "{{ nextcloud_config_default_parameters + nextcloud_config_additional_parameters }}"

# Default configuration parameters to apply to Nextcloud.
# To add your own additional parameters, use `nextcloud_config_additional_parameters`.
# To get rid of these defaults, redefine `nextcloud_config_default_parameters` or `nextcloud_config_parameters`.
nextcloud_config_default_parameters:
  - key: overwriteprotocol
    value: "https"
    type: string

# Add your custom Nextcloud configuration parameters here.
#
# Example:
# nextcloud_config_additional_parameters:
#   - key: mail_smtphost
#     value: smtp.example.com
#     type: string
nextcloud_config_additional_parameters: []

# Specifies when to restart the Nextcloud services so that
# a new SSL certificate could go into effect (UTC time).
nextcloud_services_restart_cron_time_definition: "15 4 3 * *"


nextcloud_goofys_external_storage_enabled: false
nextcloud_goofys_docker_image: "cloudproto/goofys:latest"
nextcloud_goofys_external_storage_path: "{{ nextcloud_external_storage_path }}/goofys"
nextcloud_goofys_external_storage_bucket_name: "your-bucket-name"
nextcloud_goofys_external_storage_aws_access_key: "your-aws-access-key"
nextcloud_goofys_external_storage_aws_secret_key: "your-aws-secret-key"
nextcloud_goofys_external_storage_region: "eu-central-1"
# Custom endpoint for non AWS S3 storage
nextcloud_goofys_external_storage_endpoint: ""
# Controls whether appdata previews are stored in Goofys as well.
# For this to work, you need to specify a correct instance id.
nextcloud_goofys_external_storage_for_appdata_previews_enabled: false
nextcloud_goofys_external_storage_for_appdata_previews_instance_id: "ocdmh6gdl21v"


# By default, this playbook sets up its own nginx proxy server on port 80/443.
# This is fine if you're dedicating the whole server to Nextcloud.
# But in case that's not the case, you may wish to prevent that
# and take care of proxying by yourself.
nextcloud_nginx_proxy_enabled: true

nextcloud_nginx_proxy_docker_image: "nginx:1.19.6-alpine"

nextcloud_nginx_proxy_data_path: "{{ nextcloud_base_data_path }}/nginx-proxy"
nextcloud_nginx_proxy_confd_path: "{{ nextcloud_nginx_proxy_data_path }}/conf.d"

nextcloud_nginx_proxy_client_max_body_size: "4G"

# If `nextcloud_nginx_proxy_enabled` is set to `false`,
# nextcloud-apache's port 80 will be exposed to the container host (127.0.0.1)
# on this port by default.
nextcloud_apache_http_port_on_host: 37150

# By default, this playbook automatically retrieves and auto-renews
# free SSL certificates from Let's Encrypt.
#
# The following retrieval methods are supported:
# - "lets-encrypt" - the playbook obtains free SSL certificates from Let's Encrypt
# - "self-signed" - the playbook generates and self-signs certificates
# - "manually-managed" - lets you manage certificates by yourself (manually; see below)
# - "none" - like "manually-managed", but doesn't care if you don't drop certificates in the location it expects
#
# If you decide to manage certificates by yourself (`nextcloud_ssl_retrieval_method: manually-managed`),
# you'd need to drop them into the directory specified by `nextcloud_ssl_config_dir_path`
# obeying the following hierarchy:
# - <nextcloud_ssl_config_dir_path>/live/<domain>/fullchain.pem
# - <nextcloud_ssl_config_dir_path>/live/<domain>/privkey.pem
# where <domain> refers to the domains that you need (usually `host_specific_nextcloud_hostname`).
#
# The "none" type (`nextcloud_ssl_retrieval_method: none`), simply means that no certificate retrieval will happen.
# It's useful for when you've disabled the nginx proxy (`nextcloud_nginx_proxy_enabled: false`)
# and you'll be using another reverse-proxy server (like Apache) with your own certificates, managed by yourself.
nextcloud_ssl_retrieval_method: "lets-encrypt"

nextcloud_ssl_base_path: "{{ nextcloud_base_data_path }}/ssl"
nextcloud_ssl_config_dir_path: "{{ nextcloud_ssl_base_path }}/config"
nextcloud_ssl_log_dir_path: "{{ nextcloud_ssl_base_path }}/log"
nextcloud_ssl_support_email: "{{ host_specific_nextcloud_ssl_support_email }}"
nextcloud_ssl_certbot_docker_image: "certbot/certbot:v1.10.1"
nextcloud_ssl_certbot_standalone_http_port: 2403
nextcloud_ssl_use_staging: false

# Specifies when to attempt to retrieve new SSL certificates from Let's Encrypt.
nextcloud_ssl_renew_cron_time_definition: "15 5 */5 * *"


nextcloud_onlyoffice_enabled: false
nextcloud_onlyoffice_document_server_docker_image: "onlyoffice/documentserver:6.1.0.83"

# If `nextcloud_nginx_proxy_enabled` is set to `true`,
# nextcloud-onlyoffice-document-server's port 80 is exposed to the container host (127.0.0.1)
# on this port by default.
nextcloud_onlyoffice_document_server_http_port_on_host: 37180
